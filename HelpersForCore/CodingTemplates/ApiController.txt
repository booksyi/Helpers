using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using MediatR;
using Microsoft.AspNetCore.Mvc;
using {{ProjectName}}.Controllers.{{Plural}}.Actions;

namespace {{ProjectName}}.Controllers.{{Plural}}
{
    [Route("api/[controller]")]
    public class {{Singular}}Controller : Controller
    {
        private readonly IMediator mediator;

        public {{Singular}}Controller(IMediator mediator)
        {
            this.mediator = mediator;
        }

        [HttpGet("")]
        public async Task<ActionResult<Get{{Plural}}.Response>> Get{{Plural}}([FromQuery] Get{{Plural}}.Request request)
        {
            Get{{Plural}}.Response response = await this.mediator.Send(request);
            return new OkObjectResult(response);
        }

        [HttpGet("{id:int}")]
        public async Task<ActionResult<Get{{Singular}}.Response>> Get{{Singular}}(int id)
        {
            Get{{Singular}}.Request request = new Get{{Singular}}.Request() { Id = id };
            Get{{Singular}}.Response response = await this.mediator.Send(request);
            return new OkObjectResult(response);
        }

        [HttpPost("")]
        public async Task<ActionResult<Create{{Singular}}.Response>> Create{{Singular}}([FromBody] Create{{Singular}}.Request request)
        {
            Create{{Singular}}.Response response = await this.mediator.Send(request);
            return new OkObjectResult(response);
        }

        [HttpPut("{id:int}")]
        public async Task<ActionResult<Update{{Singular}}.Response>> Update{{Singular}}(int id, [FromBody]Update{{Singular}}.Request request)
        {
            request.Id = id;
            Update{{Singular}}.Response response = await this.mediator.Send(request);
            return new OkObjectResult(response);
        }

        [HttpDelete("{id:int}")]
        public async Task<ActionResult> Delete{{Singular}}(int id)
        {
            Delete{{Singular}}.Request request = new Delete{{Singular}}.Request() { Id = id };
            await this.mediator.Send(request);
            return new OkResult();
        }
    }
}